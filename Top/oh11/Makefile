########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := top_optohybrid
PROJECT := top_optohybrid
PROJECT_FILE := $(PROJECT).xise
TOOL_PATH := 
TCL_INTERPRETER := xtclsh
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := Virtex6
SYN_DEVICE := xc6vlx130t
SYN_PACKAGE := ff1156
SYN_GRADE := -1

TCL_CREATE := project new $(PROJECT_FILE)
TCL_OPEN := project open $(PROJECT_FILE)
TCL_SAVE := project save
TCL_CLOSE := project close
ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

SOURCES_VHDLFile := \
../../src/mgt/gtp/gtp_common_reset.vhd \
../../src/utils/iodelay.vhd \
../../src/utils/clocking.vhd \
../../src/gbt/link_request.vhd \
../../src/trigger/trig_alignment/frame_aligner_tmr.vhd \
../../src/trigger/sbits.vhd \
../../src/trigger/trigger_data_phy.vhd \
../../src/wb/ipbus_slave.vhd \
../../src/trigger/channel_to_strip.vhd \
../../src/utils/iserdes.vhd \
../../src/control/control.vhd \
../../src/utils/clock_strobe.vhd \
../../src/utils/synchronizer.vhd \
../../src/trigger/trigger.vhd \
../../src/wb/ipbus_slave_tmr.vhd \
../../src/utils/oversample.vhd \
../../src/gbt/to_gbt_ser.vhd \
../../src/gbt/gbt.vhd \
../../src/gbt/fifo_a7.vhd \
../../src/wb/wb_switch.vhd \
../../src/mgt/gtp/gtp_sync_block.vhd \
../../src/utils/6b8b_pkg.vhd \
../../src/trigger/trigger_data_formatter.vhd \
../../src/mgt/mgt_wrapper.vhd \
../../src/pkg/version_pkg.vhd \
../../src/mgt/gtp/gtp_tx_manual_phase_align.vhd \
../../src/trigger/sbits_hitmap.vhd \
../../src/utils/counter_snap.vhd \
../../src/mgt/gtp/gtp_cpll_railing.vhd \
../../src/gbt/gbt_link.vhd \
../../src/control/startup.vhd \
../../src/cluster_building/find_clusters.vhd \
../../src/mgt/gtp/gtp_tx_startup_fsm.vhd \
../../src/trigger/trig_alignment/trig_alignment.vhd \
../../src/mgt/gtp/gtp_gt.vhd \
../../src/utils/dru.vhd \
../../src/gbt/gbt_serdes.vhd \
../../src/pkg/hardware_pkg_ge11.vhd \
../../src/utils/progress_bar.vhd \
../../src/pkg/registers.vhd \
../../src/gbt/gbt_tx.vhd \
../../src/utils/sem_mon.vhd \
../../src/optohybrid_top.vhd \
../../src/utils/6b8b.vhd \
../../src/trigger/active_vfats.vhd \
../../src/control/adc.vhd \
../../src/gbt/gbt_rx.vhd \
../../src/utils/dru_tmr.vhd \
../../src/mgt/gtp/gtp_sync_pulse.vhd \
../../src/pkg/types_pkg.vhd \
../../src/utils/8b6b.vhd \
../../src/trigger/sbit_monitor.vhd \
../../src/cluster_building/top_cluster_packer.vhd \
../../src/wb/ipb_switch_tmr.vhd \
../../src/wb/ipb_switch.vhd \
../../src/pkg/ipbus_pkg.vhd \
../../src/gbt/gbt_link_tmr.vhd \
../../src/mgt/gtp/gtp_common.vhd \
../../src/utils/bitslip.vhd

SOURCES_VerilogFile := \
../../src/trigger/trig_alignment/frame_aligner.v \
../../src/control/fmm.v \
../../src/control/device_dna.v \
../../src/cluster_building/find_cluster_primaries.v \
../../src/cluster_building/consecutive_count.v \
../../src/control/reset.v \
../../src/cluster_building/x_oneshot.v \
../../src/cluster_building/priority384.v \
../../src/utils/err_indicator.v \
../../src/utils/cylon.v \
../../src/utils/fader.v \
../../src/cluster_building/generated/sorter16.v \
../../src/control/ttc.v \
../../src/control/external.v \
../../src/cluster_building/count1536.v \
../../src/control/led_control.v \
../../src/utils/x_flashsm.v \
../../src/cluster_building/truncate_clusters.v

SOURCES_UCFFile := \
../../src/ucf/misc_v3b.ucf \
../../src/ucf/sbits.ucf \
../../src/ucf/gbt.ucf

SOURCES_XCOFile := \
../../src/ip_cores/mgt/mgt.xco \
../../src/ip_cores/sem/sem.xco \
../../src/ip_cores/clocks/clocks.xco \
../../src/ip_cores/fifo/fifo.xco \
../../src/ip_cores/xadc/xadc.xco

files.tcl:
		@$(foreach sourcefile, $(SOURCES_VHDLFile), echo "xfile add $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_VerilogFile), echo "xfile add $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_UCFFile), echo "xfile add $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_XCOFile), echo "xfile add $(sourcefile)" >> $@ &)

SYN_PRE_PROJECT_CMD := 
SYN_POST_PROJECT_CMD := 

SYN_PRE_SYNTHESIZE_CMD := 
SYN_POST_SYNTHESIZE_CMD := 

SYN_PRE_TRANSLATE_CMD := 
SYN_POST_TRANSLATE_CMD := 

SYN_PRE_MAP_CMD := 
SYN_POST_MAP_CMD := 

SYN_PRE_PAR_CMD := 
SYN_POST_PAR_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

project.tcl:
		echo $(TCL_CREATE) >> $@
		echo xfile remove [search \* -type file] >> $@
		echo source files.tcl >> $@
		echo project set \"family\" \"$(SYN_FAMILY)\" >> $@
		echo project set \"device\" \"$(SYN_DEVICE)\" >> $@
		echo project set \"package\" \"$(SYN_PACKAGE)\" >> $@
		echo project set \"speed\" \"$(SYN_GRADE)\" >> $@
		echo project set \"Manual Implementation Compile Order\" \"false\" >> $@
		echo project set \"Auto Implementation Top\" \"false\" >> $@
		echo project set \"Create Binary Configuration File\" \"true\" >> $@
		echo set compile_directory . >> $@
		echo project set top $(TOP_MODULE) >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

project: files.tcl project.tcl
		$(SYN_PRE_PROJECT_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_PROJECT_CMD)
		touch $@

synthesize.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Synthesize - XST} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

synthesize: project synthesize.tcl
		$(SYN_PRE_SYNTHESIZE_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_SYNTHESIZE_CMD)
		touch $@

translate.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Translate} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

translate: synthesize translate.tcl
		$(SYN_PRE_TRANSLATE_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_TRANSLATE_CMD)
		touch $@

map.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Map} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

map: translate map.tcl
		$(SYN_PRE_MAP_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_MAP_CMD)
		touch $@

par.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Place '&' Route} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

par: map par.tcl
		$(SYN_PRE_PAR_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_PAR_CMD)
		touch $@

bitstream.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Generate Programming File} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

bitstream: par bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) xst xlnx_auto_0_xdb iseconfig _xmsgs _ngo *.b *_summary.html *.bld *.cmd_log *.drc *.lso *.ncd *.ngc *.ngd *.ngr *.pad *.par *.pcf *.prj *.ptwx *.stx *.syr *.twr *.twx *.gise *.gise *.bgn *.unroutes *.ut *.xpi *.xst *.xise *.xwbt *_envsettings.html *_guide.ncd *_map.map *_map.mrp *_map.ncd *_map.ngm *_map.xrpt *_ngdbuild.xrpt *_pad.csv *_pad.txt *_par.xrpt *_summary.xml *_usage.xml *_xst.xrpt usage_statistics_webtalk.html webtalk.log par_usage_statistics.html webtalk_pn.xml

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize translate map par bitstream
		rm -rf project.tcl synthesize.tcl translate.tcl map.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf *.bit *.bin *.mcs

.PHONY: mrproper clean all
